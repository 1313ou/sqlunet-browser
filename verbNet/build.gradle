/*
 * Copyright (c) 2019. Bernard Bou <1313ou@gmail.com>.
 */

plugins {
    id 'org.sqlunet.plugin.querybuilder' version '1.0.0'
    id 'com.android.library'
}

android {
    namespace 'org.sqlunet.verbnet'

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    implementation project(path: ':xNet')
    implementation project(path: ':treeView')

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation 'androidx.annotation:annotation:1.4.0'
    implementation 'com.google.android.material:material:1.6.1'

    testImplementation project(path: ':test-sql')
    testImplementation 'junit:junit:4.13.2'
}

task dumpSourceSets() {
    doLast {
        android.sourceSets.each { srcSet ->
            println "[" + srcSet.name + "]"
            print "-->Source directories: " + srcSet.java.srcDirs + "\n"
            print "-->Resource directories: " + srcSet.resources.srcDirs + "\n"
            println ""
        }
    }
}

def protoSrcDir = new File(projectDir, "/src/proto")
def generatedSrcDir = new File(buildDir, "generated/source/queries")

android {

    sourceSets {

        main {
            java.srcDirs += generatedSrcDir
        }
    }
}

querybuilder_args {

    inDir = "${protoSrcDir}/verbnet"
    factory = "Factory.java"
    variables = ["Names.properties", "NamesExtra.properties"]
    instantiates = ["SqLiteDialect.java"]

    outDir = "${generatedSrcDir}"
    v = "V"
    q = "Q"
    qv = "QV"
    qPackage = "org.sqlunet.verbnet.provider"
    instantiateDest = "org.sqlunet.verbnet.sql"
}

task generateAll {
    dependsOn('generateQV')
            .dependsOn('generateQ')
            .dependsOn('generateV')
            .dependsOn('instantiate')
}

preBuild {
    dependsOn('generateAll')
}
