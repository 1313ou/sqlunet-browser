/*
 * Copyright (c) 2023. Bernard Bou <1313ou@gmail.com>
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        mavenCentral()
        google()
        maven { url System.getenv('HOME') + "/.m2/repository/" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.1'
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.7.3'
    }
}

allprojects {

    repositories {
        mavenCentral()
        google()
        maven { url System.getenv('HOME') + "/.m2/repository/" }
    }

    ext {
        versionCode = 127
        versionName = '2.127'
        minSdkVersion = 19
        targetSdkVersion = 33
        compileSdk = 34

        appcompatVersion = '1.6.1'
        fragmentVersion = '1.6.1'
        lifecycleVersion = '2.2.0'
        navVersion = '2.7.3'
        materialVersion = '1.9.0'
        annotationVersion = '1.6.0'
        desugaring = '2.0.3'
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

apply plugin: 'idea'
idea {
    module {
        // excludeDirs += file('.idea')
        excludeDirs += file('reference')
        excludeDirs += file('captures')
        excludeDirs += file('data')
        excludeDirs += file('data2')
        excludeDirs += file('tools')
        excludeDirs += file('utils')
        excludeDirs += file('dist')
        excludeDirs += file('gradle')
        println("modules")
        project.rootProject.subprojects.each {

            println("module $it @ " + it.projectDir)
            ["artwork", "artwork-assets", "artwork-assets", "artwork-relations", "data"].each { it2 ->
                excludeDirs += file("$it.projectDir/$it2")
            }
            /*
            ["artwork", "artwork-assets", "artwork-relations", "data"].each { it2 ->
                fileTree("$it.projectDir").visit { file ->
                    if (file.isDirectory() && file.name == "$it2") {
                        println(file)
                        excludeDirs += file
                    }
                }
            }
             */
        }
    }
}

apply from: file('projectDependencyGraph.gradle')
